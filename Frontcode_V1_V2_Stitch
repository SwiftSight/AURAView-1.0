import React, { useState } from 'react';
import { Upload, Box, AlertTriangle, Camera } from 'lucide-react';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';

const ImageTo3DConverter = () => {
  const [selectedFile, setSelectedFile] = useState(null);
  const [preview, setPreview] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleFileSelect = (event) => {
    const file = event.target.files[0];
    setError(null);
    
    if (file) {
      if (!file.type.startsWith('image/')) {
        setError('Please upload an image file (PNG, JPG, JPEG)');
        return;
      }
      
      setSelectedFile(file);
      const reader = new FileReader();
      reader.onloadend = () => {
        setPreview(reader.result);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleUpload = async () => {
    if (!selectedFile) {
      setError('Please select an image first');
      return;
    }

    setIsLoading(true);
    setError(null);

    try {
      // Simulated API call with random processing outcome
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Simulated error (1 in 4 chance)
      if (Math.random() < 0.25) {
        throw new Error('Failed to process image. Please try again.');
      }

      console.log('Processing complete');
      
    } catch (err) {
      setError(err.message);
    } finally {
      setIsLoading(false);
    }
  };

  const handleDownload = () => {
    // Placeholder for download functionality
    alert('3D model download would occur here');
  };

  return (
    <div className="min-h-screen bg-gray-100 flex items-center justify-center">
      <div className="max-w-4xl w-full mx-auto p-6">
        <div className="bg-white rounded-lg shadow-lg p-8 space-y-6">
          {/* Header */}
          <div className="flex items-center justify-between mb-6">
            <div>
              <h1 className="text-3xl font-bold mb-2">2D to 3D Model Converter</h1>
              <p className="text-gray-600">Transform your 2D images into 3D models</p>
            </div>
            <Camera className="w-10 h-10 text-blue-500" />
          </div>

          {/* Upload Section */}
          <div className="border-2 border-dashed rounded-lg p-8 text-center">
            <input
              type="file"
              accept="image/*"
              onChange={handleFileSelect}
              className="hidden"
              id="file-upload"
            />
            <label
              htmlFor="file-upload"
              className="cursor-pointer flex flex-col items-center"
            >
              <Upload className="w-12 h-12 text-gray-400 mb-4" />
              <span className="text-gray-600">
                {selectedFile ? selectedFile.name : 'Click to upload or drag and drop'}
              </span>
            </label>
          </div>

          {/* Preview Section */}
          {preview && (
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="border rounded-lg p-4">
                <h2 className="text-lg font-semibold mb-2">Original Image</h2>
                <img
                  src={preview}
                  alt="Preview"
                  className="w-full h-64 object-contain"
                />
              </div>
              <div className="border rounded-lg p-4">
                <h2 className="text-lg font-semibold mb-2">3D Preview</h2>
                <div className="w-full h-64 bg-gray-100 flex items-center justify-center">
                  {isLoading ? (
                    <div className="animate-pulse text-gray-500">Processing...</div>
                  ) : (
                    <>
                      <Box className="w-12 h-12 text-gray-400" />
                      <span className="ml-2 text-gray-500">3D preview will appear here</span>
                    </>
                  )}
                </div>
              </div>
            </div>
          )}

          {/* Action Buttons */}
          <div className="flex justify-center space-x-4">
            <button
              onClick={handleUpload}
              disabled={!selectedFile || isLoading}
              className={`px-6 py-2 rounded-lg ${
                !selectedFile || isLoading
                  ? 'bg-gray-300 cursor-not-allowed'
                  : 'bg-blue-600 hover:bg-blue-700'
              } text-white font-medium`}
            >
              {isLoading ? 'Processing...' : 'Generate 3D Model'}
            </button>
            {preview && !isLoading && (
              <button
                onClick={handleDownload}
                className="px-6 py-2 bg-green-500 hover:bg-green-600 text-white rounded-lg font-medium"
              >
                Download 3D Model
              </button>
            )}
          </div>

          {/* Error Alert */}
          {error && (
            <Alert variant="destructive">
              <AlertTriangle className="h-4 w-4" />
              <AlertTitle>Error</AlertTitle>
              <AlertDescription>{error}</AlertDescription>
            </Alert>
          )}
        </div>
      </div>
    </div>
  );
};

export default ImageTo3DConverter;
